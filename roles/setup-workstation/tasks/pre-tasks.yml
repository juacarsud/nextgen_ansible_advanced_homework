- name: Setup SSH keys for cloud-user
  authorized_key:
     user: cloud-user
     state: present
     key: http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub

- name: Ensure packages are installed
  package_facts:
    manager: auto
  register: r_yum_packages

#- debug: var=r_yum_packages.ansible_facts

- name: Install packages for Openstack configuration
  yum:
    name: "{{ item }}"
    state: latest
  when: 'item not in r_yum_packages.ansible_facts.packages'
  loop: "{{ yum_packages }}"

# - name: Install required packages 
#   yum: 
#      name:
#        - python3
#        - git
#      state: latest 

- name: Ensure Pip Libraries already installed
  pip_package_info:
    clients: pip3
  register: r_pip_packages

- name: Install openstacksdk library
  pip:
    name: "{{ item }}"
    state: latest
    extra_args: -U
    executable: pip3
  loop: "{{ pip_packages }}"
  when: 'item not in r_pip_packages.packages.pip3'

# - name: Install openstack library
#   command: pip3 install ansible openstacksdk -U

- name: Inlude Variables
  include_vars:
    file: vars/osp_clouds_vars.yml


# - name: Create clouds.yaml file
#   blockinfile:
#     create: yes
#     path: /etc/openstack/clouds.yaml
#     block: |2
#       clouds:
#         "{{ cloud_name}}":
#           auth:
#             auth_url: "{{ item.auth_url }}"
#             username: "{{ item.username }}"
#             password: "{{ item.password }}"
#             project_id: "{{ item.project_id }}"
#             project_name: "{{ item.project_name }}"
#             user_domain_name: "{{ item.user_domain_name }}"
#           region_name: "{{ item.region_name}}"
#           interface: "{{ item.interface }}"
#           identity_api_version: 3
#         ansible:
#           use_hostnames: True
#           expand_hostvars: False
#           fail_on_errors: True
#   with_items: "{{ osp_cloud_file }}"

- name: Create clouds.yaml file
  template:
    src: clouds.yaml.j2
    dest: /etc/openstack/
